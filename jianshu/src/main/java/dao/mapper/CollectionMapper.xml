<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.CollectionMapper" >
  <resultMap id="BaseResultMap" type="model.Collection" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="collection_id" property="collectionId" jdbcType="INTEGER" />
    <result column="article_url" property="articleUrl" jdbcType="VARCHAR" />
    <result column="article_title" property="articleTitle" jdbcType="VARCHAR" />
    <result column="img_url" property="imgUrl" jdbcType="VARCHAR" />
    <result column="author_url" property="authorUrl" jdbcType="VARCHAR" />
    <result column="author_name" property="authorName" jdbcType="VARCHAR" />
    <result column="published_time" property="publishedTime" jdbcType="TIMESTAMP" />
    <result column="reading_amount" property="readingAmount" jdbcType="INTEGER" />
    <result column="comment_amount" property="commentAmount" jdbcType="INTEGER" />
    <result column="like_amount" property="likeAmount" jdbcType="INTEGER" />
    <result column="reward_amount" property="rewardAmount" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, collection_id, article_url, article_title, img_url, author_url, author_name, 
    published_time, reading_amount, comment_amount, like_amount, reward_amount, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="model.CollectionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from js_collection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from js_collection
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from js_collection
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="model.CollectionExample" >
    delete from js_collection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.Collection" >
    insert into js_collection (id, collection_id, article_url, 
      article_title, img_url, author_url, 
      author_name, published_time, reading_amount, 
      comment_amount, like_amount, reward_amount, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{collectionId,jdbcType=INTEGER}, #{articleUrl,jdbcType=VARCHAR}, 
      #{articleTitle,jdbcType=VARCHAR}, #{imgUrl,jdbcType=VARCHAR}, #{authorUrl,jdbcType=VARCHAR}, 
      #{authorName,jdbcType=VARCHAR}, #{publishedTime,jdbcType=TIMESTAMP}, #{readingAmount,jdbcType=INTEGER}, 
      #{commentAmount,jdbcType=INTEGER}, #{likeAmount,jdbcType=INTEGER}, #{rewardAmount,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="model.Collection" >
    insert into js_collection
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="collectionId != null" >
        collection_id,
      </if>
      <if test="articleUrl != null" >
        article_url,
      </if>
      <if test="articleTitle != null" >
        article_title,
      </if>
      <if test="imgUrl != null" >
        img_url,
      </if>
      <if test="authorUrl != null" >
        author_url,
      </if>
      <if test="authorName != null" >
        author_name,
      </if>
      <if test="publishedTime != null" >
        published_time,
      </if>
      <if test="readingAmount != null" >
        reading_amount,
      </if>
      <if test="commentAmount != null" >
        comment_amount,
      </if>
      <if test="likeAmount != null" >
        like_amount,
      </if>
      <if test="rewardAmount != null" >
        reward_amount,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="collectionId != null" >
        #{collectionId,jdbcType=INTEGER},
      </if>
      <if test="articleUrl != null" >
        #{articleUrl,jdbcType=VARCHAR},
      </if>
      <if test="articleTitle != null" >
        #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null" >
        #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="authorUrl != null" >
        #{authorUrl,jdbcType=VARCHAR},
      </if>
      <if test="authorName != null" >
        #{authorName,jdbcType=VARCHAR},
      </if>
      <if test="publishedTime != null" >
        #{publishedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readingAmount != null" >
        #{readingAmount,jdbcType=INTEGER},
      </if>
      <if test="commentAmount != null" >
        #{commentAmount,jdbcType=INTEGER},
      </if>
      <if test="likeAmount != null" >
        #{likeAmount,jdbcType=INTEGER},
      </if>
      <if test="rewardAmount != null" >
        #{rewardAmount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.CollectionExample" resultType="java.lang.Integer" >
    select count(*) from js_collection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update js_collection
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.collectionId != null" >
        collection_id = #{record.collectionId,jdbcType=INTEGER},
      </if>
      <if test="record.articleUrl != null" >
        article_url = #{record.articleUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.articleTitle != null" >
        article_title = #{record.articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.imgUrl != null" >
        img_url = #{record.imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.authorUrl != null" >
        author_url = #{record.authorUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.authorName != null" >
        author_name = #{record.authorName,jdbcType=VARCHAR},
      </if>
      <if test="record.publishedTime != null" >
        published_time = #{record.publishedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.readingAmount != null" >
        reading_amount = #{record.readingAmount,jdbcType=INTEGER},
      </if>
      <if test="record.commentAmount != null" >
        comment_amount = #{record.commentAmount,jdbcType=INTEGER},
      </if>
      <if test="record.likeAmount != null" >
        like_amount = #{record.likeAmount,jdbcType=INTEGER},
      </if>
      <if test="record.rewardAmount != null" >
        reward_amount = #{record.rewardAmount,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update js_collection
    set id = #{record.id,jdbcType=BIGINT},
      collection_id = #{record.collectionId,jdbcType=INTEGER},
      article_url = #{record.articleUrl,jdbcType=VARCHAR},
      article_title = #{record.articleTitle,jdbcType=VARCHAR},
      img_url = #{record.imgUrl,jdbcType=VARCHAR},
      author_url = #{record.authorUrl,jdbcType=VARCHAR},
      author_name = #{record.authorName,jdbcType=VARCHAR},
      published_time = #{record.publishedTime,jdbcType=TIMESTAMP},
      reading_amount = #{record.readingAmount,jdbcType=INTEGER},
      comment_amount = #{record.commentAmount,jdbcType=INTEGER},
      like_amount = #{record.likeAmount,jdbcType=INTEGER},
      reward_amount = #{record.rewardAmount,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.Collection" >
    update js_collection
    <set >
      <if test="collectionId != null" >
        collection_id = #{collectionId,jdbcType=INTEGER},
      </if>
      <if test="articleUrl != null" >
        article_url = #{articleUrl,jdbcType=VARCHAR},
      </if>
      <if test="articleTitle != null" >
        article_title = #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null" >
        img_url = #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="authorUrl != null" >
        author_url = #{authorUrl,jdbcType=VARCHAR},
      </if>
      <if test="authorName != null" >
        author_name = #{authorName,jdbcType=VARCHAR},
      </if>
      <if test="publishedTime != null" >
        published_time = #{publishedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readingAmount != null" >
        reading_amount = #{readingAmount,jdbcType=INTEGER},
      </if>
      <if test="commentAmount != null" >
        comment_amount = #{commentAmount,jdbcType=INTEGER},
      </if>
      <if test="likeAmount != null" >
        like_amount = #{likeAmount,jdbcType=INTEGER},
      </if>
      <if test="rewardAmount != null" >
        reward_amount = #{rewardAmount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Collection" >
    update js_collection
    set collection_id = #{collectionId,jdbcType=INTEGER},
      article_url = #{articleUrl,jdbcType=VARCHAR},
      article_title = #{articleTitle,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      author_url = #{authorUrl,jdbcType=VARCHAR},
      author_name = #{authorName,jdbcType=VARCHAR},
      published_time = #{publishedTime,jdbcType=TIMESTAMP},
      reading_amount = #{readingAmount,jdbcType=INTEGER},
      comment_amount = #{commentAmount,jdbcType=INTEGER},
      like_amount = #{likeAmount,jdbcType=INTEGER},
      reward_amount = #{rewardAmount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>